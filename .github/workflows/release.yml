name: release

on:
  push:
    branches: [main, master]

jobs:
  goreleaser:
    runs-on: ubuntu-latest  
    steps:
    -
      name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    -
      id: vars
      run: |
        goVersion=$(grep '^FROM go' .github/go/Dockerfile | cut -d ' ' -f 2 | cut -d ':' -f 2)
        echo ::set-output name=go_version::${goVersion}
        echo "Using Go version ${goVersion}"
    -
      name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: ${{ steps.vars.outputs.go_version }}
    -
      name: Run Trivy in GitHub SBOM mode and submit results to Dependency Snapshots
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        format: 'github'
        output: 'dependency-results.sbom.json'
        image-ref: '.'
        github-pat: ${{ secrets.GH_PRIVATEREPO_TOKEN }}
    -
      name: Remove SBOM result
      run: |
        rm dependency-results.sbom.json
    -
      name: Setup git for private go module access
      run: |
        go env -w GOPRIVATE=github.com/intigriti
        echo "machine github.com login ${{ secrets.GH_PRIVATEREPO_TOKEN }}" >> ~/.netrc
    -
      name: Create release tag
      uses: go-semantic-release/action@v1
      id: semrel
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
    -
      run: git fetch -a
      if: steps.semrel.outputs.version != ''
    -
      name: Release
      uses: goreleaser/goreleaser-action@v3.1.0
      if: steps.semrel.outputs.version != ''
      with:
        version: latest
        args: release --config=.github/goreleaser.yml --rm-dist
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    -
      name: Generate dist hashes
      id: hash
      run: |
        echo "::set-output name=hashes::$(ls dist/* | xargs shasum -a256 | base64 -w0)"
  
  provenance:
    needs: [goreleaser]
    uses: slsa-framework/slsa-github-generator/.github/workflows/generator_generic_slsa3.yml@v1.2.0
    with:
      base64-subjects: "${{ needs.goreleaser.outputs.hashes }}"
